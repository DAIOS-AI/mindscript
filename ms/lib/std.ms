# "Standard library" null

# "Collects the elements generated by an iterator into an array."
let list = fun(iterator: Any -> Any) -> [Any] do
    let array = []
    for e in iterator do
        push(array, e)
    end
    return(array)
end

# "Iterator tools." null

# "Applies a function to an iterator."
let map = fun(f: Any -> Any, iterator: Null -> Any) -> (Null -> Any) do
    fun() -> Any do
        let value = iterator()
        if value == null then null 
        else f(value)
        end        
    end
end

# "Filters an iterator using a condition."
let filter = fun(cond: Any -> Bool, iterator: Null -> Any) -> (Null -> Any) do
    fun() -> Any do
        for value in iterator do
            if cond(value) then
                break(value)
            end
        end
    end
end

# "Reduces an iterator using a binary function."
let reduce = fun(f: Any -> Any -> Any, iterator: Null -> Any) -> Any do
    let accum = iterator()
    if accum == null then [] end
    for value in iterator do
        accum = f(accum, value)
    end
end

# "Returns an iterator for the integers from a given starting number until an ending number."
let range = fun(start: Int, stop: Int?) -> (Null -> Int?) do
    fun(_: Null) -> Int? do
        let n = start
        if stop == null or start < stop then
            start = start + 1
            return(n)
        else
            return(null)
        end
    end
end

# "The natural numbers."
let natural = fun(_: Null) -> (Null -> Int?) do
    range(1, null)
end

# "The positive integers."
let natural0 = fun(_: Null) -> (Null -> Int?) do
    range(0, null)
end

# "Retrieve a web page."
let www = fun(url: Str) -> Str do
    http(null, "GET", url).text
end


